# ============================================
# SHARED ENVIRONMENT CONFIGURATION
# Version: 1.0.0
# Copy this to .env and fill in your values
# ============================================

# ============================================
# APPLICATION
# ============================================
NODE_ENV=development
API_VERSION=v1.0.0
APP_NAME=AIVA

# ============================================
# API SERVER
# ============================================
API_PORT=62001
API_HOST=0.0.0.0
CORS_ORIGIN=http://localhost:3000

# ============================================
# PYTHON SERVICE
# ============================================
PYTHON_SERVICE_URL=http://127.0.0.1:62002
PYTHON_SERVICE_API_KEY=

# ============================================
# DATABASE (MySQL)
# ============================================
DB_HOST=localhost
DB_PORT=3306
DB_USER=root
DB_PASSWORD=
DB_NAME=yovo_db_cc

# Connection Pool
DB_CONNECTION_LIMIT=10
DB_QUEUE_LIMIT=0

# ============================================
# REDIS
# ============================================
REDIS_HOST=127.0.0.1
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Redis Vector Storage (for embeddings)
REDIS_VECTOR_DB=1
REDIS_CACHE_TTL=300

# ============================================
# MONGODB (for transcripts)
# ============================================
MONGODB_URL=mongodb://localhost:27017
MONGODB_DB=cx10

# ============================================
# AI PROVIDER KEYS
# ============================================

# OpenAI
OPENAI_API_KEY=
OPENAI_ORG_ID=

# Deepgram
DEEPGRAM_API_KEY=

# ============================================
# AI MODEL DEFAULTS
# ============================================

# Voice Models
OPENAI_MODEL=gpt-4o-mini-realtime-preview-2024-12-17
OPENAI_VOICE=shimmer
DEEPGRAM_MODEL=nova-2
DEEPGRAM_VOICE=aura-asteria-en

# Chat Models
CHAT_MODEL=gpt-4o-mini
CHAT_TEMPERATURE=0.7
CHAT_MAX_TOKENS=4096

# Embedding Models
EMBEDDING_MODEL=text-embedding-3-small
EMBEDDING_DIMENSION=1536

# Vision Models (for image processing)
VISION_MODEL=gpt-4o-mini
CLIP_MODEL=ViT-B/32

# ============================================
# AI PARAMETERS
# ============================================
AI_TEMPERATURE=0.6
MAX_RESPONSE_OUTPUT_TOKENS=4096
VAD_THRESHOLD=0.5
VAD_PREFIX_PADDING_MS=300
SILENCE_DURATION_MS=700

# ============================================
# COST & PRICING (per 1M tokens)
# ============================================

# Profit Margin
PROFIT_MARGIN_PERCENT=20

# OpenAI Pricing (USD per 1M tokens)
OPENAI_GPT4O_MINI_INPUT_COST=0.150
OPENAI_GPT4O_MINI_OUTPUT_COST=0.600
OPENAI_GPT4O_MINI_CACHED_INPUT_COST=0.075

OPENAI_GPT4O_INPUT_COST=2.50
OPENAI_GPT4O_OUTPUT_COST=10.00
OPENAI_GPT4O_CACHED_INPUT_COST=1.25

# OpenAI Realtime Audio (per 1M tokens)
OPENAI_REALTIME_AUDIO_INPUT_COST=100.00
OPENAI_REALTIME_AUDIO_OUTPUT_COST=200.00
OPENAI_REALTIME_TEXT_INPUT_COST=5.00
OPENAI_REALTIME_TEXT_OUTPUT_COST=20.00

# Embeddings (USD per 1M tokens)
OPENAI_EMBEDDING_SMALL_COST=0.020
OPENAI_EMBEDDING_LARGE_COST=0.130

# Deepgram Pricing (USD per minute)
DEEPGRAM_NOVA_2_COST=0.0043
DEEPGRAM_NOVA_3_COST=0.0059
DEEPGRAM_WHISPER_COST=0.0048
DEEPGRAM_TTS_AURA_COST=0.015

# Document Processing
DOCUMENT_PROCESSING_BASE_COST=0.01
IMAGE_PROCESSING_CLIP_COST=0.002

# Storage (USD per GB per month)
STORAGE_COST_PER_GB=0.023

# ============================================
# KNOWLEDGE BASE SETTINGS
# ============================================

# Chunking
DEFAULT_CHUNK_SIZE=500
DEFAULT_CHUNK_OVERLAP=50
MAX_CHUNK_SIZE=2000

# Search
DEFAULT_TOP_K=5
MAX_TOP_K=20
SEARCH_SIMILARITY_THRESHOLD=0.7

# Document Processing
MAX_FILE_SIZE_MB=50
ALLOWED_FILE_TYPES=pdf,docx,pptx,xlsx,csv,txt,md,json,html,jpg,jpeg,png,gif,webp
MAX_DOCUMENTS_PER_KB=1000

# Image Processing
MAX_IMAGE_SIZE_MB=10
ALLOWED_IMAGE_TYPES=jpg,jpeg,png,gif,webp
MAX_IMAGES_PER_KB=500
ENABLE_IMAGE_SEARCH=true

# ============================================
# FILE STORAGE
# ============================================
STORAGE_TYPE=local
APP_BASE_URL=/etc/aiva-oai
STORAGE_PATH=/etc/aiva-oai/storage
STORAGE_PATH_PREFIX=/aiva

# AWS S3 (if using cloud storage)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
AWS_S3_BUCKET=

# ============================================
# RTP CONFIGURATION (Voice Bridge)
# ============================================
RTP_HOST=127.0.0.1:9999
AUDIO_BUFFER_SIZE=960
AUDIO_BUFFER_INTERVAL=100

# ============================================
# MONITORING
# ============================================
MONITOR_PORT=3001
LOG_LEVEL=info
DEBUG=false
DEBUG_FUNCTION_CALLS=true

# ============================================
# SESSION MANAGEMENT
# ============================================
SESSION_TIMEOUT_MS=120000
CHAT_SESSION_TIMEOUT_MS=1800000
MAX_CONVERSATION_HISTORY=20

# ============================================
# SECURITY
# ============================================
JWT_SECRET=
JWT_EXPIRY=7d
API_RATE_LIMIT_WINDOW_MS=900000
API_RATE_LIMIT_MAX_REQUESTS=100

# ============================================
# EXTERNAL APIS (Optional)
# ============================================

# Banking API
BANKING_API_URL=
BANKING_API_KEY=

# CRM API
CRM_API_URL=
CRM_API_KEY=

# WhatsApp API
WHATSAPP_API_URL=
WHATSAPP_API_KEY=

# Email API
EMAIL_API_URL=
EMAIL_API_KEY=

# Product Catalog API
CATALOG_API_URL=
CATALOG_API_KEY=

# Shopify (for product enrichment)
SHOPIFY_STORE_URL=
SHOPIFY_ACCESS_TOKEN=

# ============================================
# MANAGEMENT API (for dynamic loading)
# ============================================
DYNAMIC_MODE=true
MANAGEMENT_API_URL=http://localhost:4000/api
MANAGEMENT_API_KEY=

# ============================================
# FEATURE FLAGS
# ============================================
ENABLE_CHAT=true
ENABLE_KNOWLEDGE_BASE=true
ENABLE_IMAGE_SEARCH=true
ENABLE_FUNCTION_CALLING=true
ENABLE_STREAMING=true
ENABLE_SWAGGER=true

# ============================================
# PYTHON SERVICE SPECIFIC
# ============================================

# NLTK Data Path
NLTK_DATA=/usr/local/share/nltk_data

# GPU Support
USE_GPU=false
CUDA_VISIBLE_DEVICES=0

# Model Caching
MODEL_CACHE_DIR=/var/aiva/models
HF_HOME=/var/aiva/huggingface

# Processing
MAX_WORKERS=4
PROCESSING_TIMEOUT=300

# ============================================
# SWAGGER DOCUMENTATION
# ============================================
SWAGGER_ENABLED=true
SWAGGER_PATH=/api-docs
SWAGGER_TITLE=AIVA API Documentation
SWAGGER_DESCRIPTION=Complete API documentation for AIVA voice and chat agents
SWAGGER_VERSION=1.0.0

# ============================================
# BACKUP & MAINTENANCE
# ============================================
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# =====================================================
# Shopify Integration Environment Variables
# Add these to api/.env
# =====================================================

# Shopify API Configuration
SHOPIFY_API_VERSION=2024-01
SHOPIFY_API_KEY=
SHOPIFY_API_SECRET=

# Queue Configuration
QUEUE_CONCURRENCY=5                    # Number of jobs to process simultaneously
QUEUE_MAX_JOBS_PER_WORKER=10          # Maximum jobs per worker
QUEUE_REMOVE_ON_COMPLETE=100          # Keep last 100 completed jobs
QUEUE_REMOVE_ON_FAIL=1000             # Keep last 1000 failed jobs

# Sync Settings
SYNC_BATCH_SIZE=10                    # Products to process per batch
SYNC_IMAGE_CONCURRENCY=3              # Images to process concurrently per product
SYNC_RATE_LIMIT_DELAY=500             # Delay between Shopify API calls (ms)
SYNC_MAX_RETRIES=3                    # Maximum retry attempts for failed operations

# Performance Tuning
SYNC_TIMEOUT_MS=7200000               # 2 hours - Overall job timeout
SYNC_PRODUCT_TIMEOUT_MS=30000         # 30 seconds - Per product timeout
SYNC_IMAGE_TIMEOUT_MS=10000           # 10 seconds - Per image timeout

# Notification Settings (Optional)
SYNC_NOTIFY_ON_COMPLETE=false         # Send notification when sync completes
SYNC_NOTIFY_ON_ERROR=true             # Send notification on sync errors

# =====================================================
# Notes:
# - Get Shopify credentials from: https://partners.shopify.com/
# - Adjust QUEUE_CONCURRENCY based on server resources
# - Reduce SYNC_IMAGE_CONCURRENCY if Python service is slow
# - Increase SYNC_RATE_LIMIT_DELAY if hitting Shopify rate limits
# =====================================================